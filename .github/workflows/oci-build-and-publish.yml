name: OCI Image Build

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: {}

env:
  KANIKO_VERSION: v1.23.2-debug
  IMAGE_TAG: 0.0.1   # default, override if needed
  KANIKO_CACHE_ARGS: "--cache=true --cache-copy-layers=true --cache-ttl=24h"

jobs:
  clone-comfy:
    # The type of runner that the job will run on
    runs-on:
      group: homelab
      labels: ghar-scale-set
    container:
      image: alpine/git:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: true
      
      - name: Upload source as artifact
        uses: actions/upload-artifact@v4
        with:
          name: source-code
          path: .

  build-comfy:
    # The type of runner that the job will run on
    runs-on:
      group: homelab
      labels: ghar-scale-set
    needs: clone-comfy
    container:
      image: moby/buildkit:v0.9.3-rootless
    steps:
      - name: Download source from artifact
        uses: actions/download-artifact@v4
        with:
          name: source-code
          path: .

      - name: Authenticate to registry
        run: |
          mkdir -p ~/.docker/
          echo "{\"auths\":{\"ocr.jcan.dev\":{\"username\":\"${{ secrets.REGISTRY_USER }}\",\"password\":\"${{ secrets.REGISTRY_PASSWORD }}\"}}}" > ~/.docker/config.json

      - name: Run Buildah build (comfy)
        run: |
          buildctl-daemonless.sh \
            build \
            --frontend dockerfile.v0 \
            --local context=. \
            --local dockerfile=. \
            --output type=image,name=ocr.jcan.dev/library/comfyui:${{ env.IMAGE_TAG }},push=true \
            --export-cache type=registry,ref=ocr.jcan.dev/library/comfyui:cache,mode=max \
            --import-cache type=registry,ref=ocr.jcan.dev/library/comfyui:cache
        env:
          OCI_REGISTRY: ocr.jcan.dev/library
          OCI_IMAGE_NAME: comfyui
          REGISTRY_USER: ${{ secrets.REGISTRY_USER }}
          REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
          CI_PROJECT_NAME: ${{ github.repository }}
